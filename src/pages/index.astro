---
import { getLangFromUrl, useRouter, useTranslations } from "src/i18n";
import Layout from "src/layouts/layout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import SeparatorLink from "src/components/molecules/separator-link.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const router = useRouter(lang);

const blogPosts = await getCollection("blog", ({ id }) => {
  return id.startsWith(`${lang}/`);
});

const recentBlogPosts = blogPosts
  .sort((a, b) => b.data.releaseDate.getTime() - a.data.releaseDate.getTime())
  .slice(0, 3);

const projects = await getCollection("projects", ({ id }) => {
  return id.startsWith(`${lang}/`);
});

const recentProjects = projects
  .sort((a, b) => a.data.sortOrder - b.data.sortOrder)
  .slice(0, 2);

const stack = await getCollection("stack", ({ id }) => {
  return id.startsWith(`${lang}/`);
});
const stackItems = stack
  .sort((a, b) => a.data.sortOrder - b.data.sortOrder)
  .slice(0, 6);
---

<Layout routeKey="home">
  <div class="p-2 sm:p-4 md:p-6 space-y-4 md:space-y-6">
    {/* About me */}
    <div class="space-y-4 md:space-y-6">
      <h1
        class="font-display text-3xl text-zinc-900 dark:text-zinc-100 whitespace-pre-line"
      >
        {t("pages.home.title")}
      </h1>
      <p
        class="font-sans text-sm text-zinc-700 dark:text-zinc-300 whitespace-pre-line"
      >
        {t("pages.home.subtitle")}
      </p>
      <SeparatorLink
        href={router("/about")}
        label={t("pages.home.aboutRedirect")}
        icon="about"
      />
    </div>

    {/* Recent Blog Posts */}
    <div class="space-y-4 md:space-y-6">
      <div class="space-y-2 md:space-y-3">
        <h3
          class="font-display font-semibold text-xl text-zinc-900 dark:text-zinc-100"
        >
          {t("pages.home.myRecentPosts")}
        </h3>
        <ul class="grid-cols-1 lg:grid-cols-3 grid gap-4">
          {
            recentBlogPosts.map((post) => (
              <li
                class:list={[
                  "w-full h-[200px] lg:h-[300px] relative bg-transparent rounded-lg overflow-hidden ",
                  "shadow-md hover:shadow-xl transition-all transform duration-500 hover:scale-105",
                ]}
              >
                <a href={router(`/blog/${post.slug}`)}>
                  <Image
                    class="object-cover object-center w-full h-full"
                    width={800}
                    height={800}
                    src={post.data.image.url}
                    alt={post.data.image.alt}
                  />
                  <div class="absolute w-full bg-black/50 bottom-0 px-4 py-2 space-y-2">
                    <h2 class="font-display font-semibold text-base text-white line-clamp-1">
                      {post.data.title}
                    </h2>
                    <p class="text-sm text-zinc-200 line-clamp-2">
                      {post.data.subtitle}
                    </p>
                  </div>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <SeparatorLink
        href={router("/blog")}
        label={t("pages.home.blogRedirect")}
        icon="blog"
      />
    </div>

    {/* Recent Projects */}
    <div class="space-y-4 md:space-y-6">
      <div class="space-y-2 md:space-y-3">
        <h3
          class="font-display font-semibold text-xl text-zinc-900 dark:text-zinc-100"
        >
          {t("pages.home.myRecentProjects")}
        </h3>
        <ul class="grid-cols-1 lg:grid-cols-2 grid gap-4">
          {
            recentProjects.map((project) => (
              <li
                class:list={[
                  "w-full h-[200px] lg:h-[250px] rounded-lg overflow-hidden",
                  "shadow-md hover:shadow-xl transition-all transform duration-500 hover:scale-105",
                ]}
              >
                <a href={router(`/projects/${project.slug}`)}>
                  <Image
                    class="object-cover object-center w-full h-full"
                    width={800}
                    height={800}
                    src={project.data.image.url}
                    alt={project.data.image.alt}
                  />
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <SeparatorLink
        href={router("/projects")}
        label={t("pages.home.projectsRedirect")}
        icon="projects"
      />
    </div>

    {/* Recent Stack */}
    <div class="space-y-4 md:space-y-6">
      <div class="space-y-2 md:space-y-3">
        <h3
          class="font-display font-semibold text-xl text-zinc-900 dark:text-zinc-100"
        >
          {t("pages.home.myStack")}
        </h3>
        <ul class="grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid gap-4">
          {
            stackItems.map((stackItem) => (
              <li
                class:list={[
                  "group w-full h-20 transition-all shadow-sm hover:shadow-md rounded-lg overflow-hidden",
                  "text-primary-600 dark:text-zinc-100 bg-primary-50 dark:bg-primary-950",
                ]}
              >
                <a
                  class="flex flex-row items-center space-x-4"
                  href={stackItem.data.url}
                >
                  <div class="w-20 h-20 flex justify-center items-center">
                    <Image
                      class="object-cover object-center transition-transform transform duration-500 group-hover:scale-125"
                      width={50}
                      height={50}
                      src={stackItem.data.icon.url}
                      alt={stackItem.data.icon.alt}
                    />
                  </div>
                  <div class="space-y-0.5">
                    <h2 class="font-display font-semibold text-base text-zinc-900 dark:text-zinc-100 line-clamp-1">
                      {stackItem.data.name}
                    </h2>
                    <p class="text-sm text-zinc-700 dark:text-zinc-300 line-clamp-2">
                      {stackItem.data.caption}
                    </p>
                  </div>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
      <SeparatorLink
        href={router("/stack")}
        label={t("pages.home.stackRedirect")}
        icon="stack"
      />
    </div>
  </div>
</Layout>
